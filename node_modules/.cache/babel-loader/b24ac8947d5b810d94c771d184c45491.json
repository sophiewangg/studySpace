{"ast":null,"code":"var _jsxFileName = \"/Users/sophiewang/Documents/GitHub/studySpace/src/App.js\",\n    _s = $RefreshSig$();\n\n/*import React, {useState} from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Timer from './components/Timer';\nimport Settings from './components/Settings';\nimport SettingsContext from './components/SettingsContext';\nimport Welcome from './Welcome';\nimport Modal from './components/Modal';\n\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(true);\n  const [workInterval, setWorkInterval] = useState(5);\n  const [breakInterval, setBreakInterval] = useState(2);\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n\n    <div>\n      <div id='welcome'> \n        <Welcome /> \n      </div>\n      <div> \n        <Modal open={isOpen}/> \n      </div>\n      \n    <div className='timer-container'> \n      <SettingsContext.Provider value={{\n        workInterval,\n        breakInterval,\n        setWorkInterval,\n        setBreakInterval,\n        showSettings,\n        setShowSettings\n      }}> \n      { showSettings ? <Settings /> : <Timer/> }\n      </SettingsContext.Provider>\n    </div>\n\n      <div className=\"todo-app\" id='study'>\n        <TodoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App; */\nimport TodoList from './components/TodoList';\nimport Modal from './components/Modal';\nimport './App.css';\nimport Timer from \"./components/Timer\";\nimport Settings from \"./components/Settings\";\nimport { useState } from \"react\";\nimport SettingsContext from \"./components/SettingsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [workMinutes, setWorkMinutes] = useState(45);\n  const [breakMinutes, setBreakMinutes] = useState(15);\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n      value: {\n        showSettings,\n        setShowSettings,\n        workMinutes,\n        breakMinutes,\n        setWorkMinutes,\n        setBreakMinutes\n      },\n      children: showSettings ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(true),\n        children: \" open modal \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: isOpen,\n        onClose: () => setIsOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      id: \"study\",\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8RG0vsQrtE9c38NCTAaAel/6lHQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sophiewang/Documents/GitHub/studySpace/src/App.js"],"names":["TodoList","Modal","Timer","Settings","useState","SettingsContext","App","showSettings","setShowSettings","workMinutes","setWorkMinutes","breakMinutes","setBreakMinutes","isOpen","setIsOpen"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACE;AAAA,4BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAC/BG,QAAAA,YAD+B;AAE/BC,QAAAA,eAF+B;AAG/BC,QAAAA,WAH+B;AAI/BE,QAAAA,YAJ+B;AAK/BD,QAAAA,cAL+B;AAM/BE,QAAAA;AAN+B,OAAjC;AAAA,gBAQGL,YAAY,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AARjC;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMO,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED,MAAb;AAAqB,QAAA,OAAO,EAAE,MAAKC,SAAS,CAAC,KAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAiBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,OAA7B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA/BQR,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["/*import React, {useState} from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Timer from './components/Timer';\nimport Settings from './components/Settings';\nimport SettingsContext from './components/SettingsContext';\nimport Welcome from './Welcome';\nimport Modal from './components/Modal';\n\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(true);\n  const [workInterval, setWorkInterval] = useState(5);\n  const [breakInterval, setBreakInterval] = useState(2);\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n\n    <div>\n      <div id='welcome'> \n        <Welcome /> \n      </div>\n      <div> \n        <Modal open={isOpen}/> \n      </div>\n      \n    <div className='timer-container'> \n      <SettingsContext.Provider value={{\n        workInterval,\n        breakInterval,\n        setWorkInterval,\n        setBreakInterval,\n        showSettings,\n        setShowSettings\n      }}> \n      { showSettings ? <Settings /> : <Timer/> }\n      </SettingsContext.Provider>\n    </div>\n\n      <div className=\"todo-app\" id='study'>\n        <TodoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App; */\n\nimport TodoList from './components/TodoList';\nimport Modal from './components/Modal';\nimport './App.css';\nimport Timer from \"./components/Timer\";\nimport Settings from \"./components/Settings\";\nimport {useState} from \"react\";\nimport SettingsContext from \"./components/SettingsContext\";\n\nfunction App() {\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [workMinutes, setWorkMinutes] = useState(45);\n  const [breakMinutes, setBreakMinutes] = useState(15);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <main>\n      <SettingsContext.Provider value={{\n        showSettings,\n        setShowSettings,\n        workMinutes,\n        breakMinutes,\n        setWorkMinutes,\n        setBreakMinutes,\n      }}>\n        {showSettings ? <Settings /> : <Timer />}\n      </SettingsContext.Provider>\n\n      <div>\n        <button onClick={() => setIsOpen(true)}> open modal </button> \n        <Modal open={isOpen} onClose={()=> setIsOpen(false)}/>\n      </div>\n\n      <div className=\"todo-app\" id='study'>\n        <TodoList />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}